apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: infra2
  template:
    metadata:
      labels:
        app: infra2
    spec:
      containers:
        - name: redis
          image: redis:5-alpine
          resources: {}
          ports:
            - containerPort: 6379
              name: redis
              protocol: TCP
        - name: session
          image: hobord/infra2:session
          imagePullPolicy: Always
          resources: {}
          env:
            - name: PORT
              value: ":50061"
            - name: REDIS_HOST
              value: localhost
            - name: REDIS_PORT
              value: "6379"
          ports:
            - containerPort: 50061
              name: session
              protocol: TCP
        - name: redirect
          image: hobord/infra2:redirect
          imagePullPolicy: Always
          resources: {}
          env:
            - name: PORT
              value: ":50062"
          volumeMounts:
            - name: redirect-config
              mountPath: /app/configs
          ports:
            - containerPort: 50062
              name: redirect
              protocol: TCP
        - name: infra
          image: hobord/infra2:infra
          imagePullPolicy: Always
          resources: {}
          env:
            - name: PORT
              value: "81"
            - name: SESSION_GRPC_SERVER
              value: "localhost:50061"
            - name: REDIRECT_GRPC_SERVER
              value: "localhost:50062"
            - name: DEFAULT_WEBSERVER
              value: "http://localhost/"
          # volumeMounts:
          #   - name: infra-config
          #     mountPath: /app/configs
          ports:
            - containerPort: 81
              name: http
              protocol: TCP
            # - containerPort: 443
            #   name: https
            #   protocol: TCP
        - name: webserver
          image: nginxdemos/hello
          resources: {}
          env:
          - name: PORT
            value: "80"
          ports:
            - containerPort: 80
              name: webserver
              protocol: TCP
        - name: vegeta
          image: peterevans/vegeta
          resources: {}
          command: [ "/bin/sh", "-c", "--" ]
          args: [ "while true; do sleep 30; done;" ]
          volumeMounts:
            - name: vegeta-report
              mountPath: /reports/
        - name: static-fs
          image: hobord/go_static_httpfs
          resources: {}
          env:
            - name: DIRECTORY
              value: /app/public/
            - name: LOG
              value: "true"
            - name: DIRINDEX
              value: "true"
          volumeMounts:
            - name: vegeta-report
              mountPath: /app/public
              readOnly: true
          ports:
            - containerPort: 8100
              name: reports
              protocol: TCP
      volumes:
        - name: vegeta-report
          emptyDir: {}
        # - name: infra-config
        #   configMap:
        #     name: infra-config
        - name: redirect-config
          configMap:
            name: redirect-config

---
apiVersion: v1
kind: Service
metadata:
  name: infra2
spec:
  selector:
    app: infra2
  ports:
    - name: session
      protocol: TCP
      port: 50061
    - name: redirect
      protocol: TCP
      port: 50062
    - name: http
      protocol: TCP
      port: 81
    - name: webserver
      protocol: TCP
      port: 80
    - name: reports
      protocol: TCP
      port: 8100
    - name: redis
      protocol: TCP
      port: 6379
  type: NodePort
